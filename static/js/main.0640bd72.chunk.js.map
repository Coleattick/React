{"version":3,"sources":["HelloWorld.jsx","Counter.jsx","List.jsx","FilteredList.jsx","App.js","reportWebVitals.js","index.js"],"names":["HelloWorld","Component","render","React","createElement","this","props","name","Counter","constructor","super","incrementCount","setState","count","state","className","onClick","List","renderList","items","map","item","key","FilteredList","onSearch","event","search","target","value","trim","toLowerCase","handleTypeSelect","selectedType","console","log","concat","filterItem","DropdownButton","id","title","Dropdown","Item","eventKey","onSelect","type","placeholder","onChange","filter","produce","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.0640bd72.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass HelloWorld extends Component {\r\n    render() {\r\n        return (\r\n            <h1>Hello, {this.props.name}!</h1>\r\n        );\r\n    }\r\n}\r\nexport default HelloWorld;","import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 5\r\n        };\r\n    }\r\n\r\n    incrementCount = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"counter\">\r\n                <h1>{this.state.count}</h1>\r\n                <button onClick={this.incrementCount}>Increment</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from 'react';\r\n/*\r\n The list component will take the list of items passed in as a property and create an\r\nHTML list with those item. In this example, we are passing in the filtered produce list,\r\nbut this component can be used for other types of items as long as it has a name.\r\n*/ class List extends Component {\r\n    renderList() {\r\n        /*\r\n        Javascript map will let you iterate and modify each item in a list.\r\n        In this example, we are changing each item\r\n        (ex. {name: \"Apple\", type: \"Fruit\"}) into a HTML list element.\r\n        */\r\n        const items = this.props.items.map(item => {\r\n            return <li key={item.name}>{item.name}</li>\r\n        });\r\n        return items;\r\n    }\r\n    render() {\r\n        return (\r\n            <ul>\r\n                {this.renderList()}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\nexport default List;","import React, { Component } from 'react';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport List from './List';\r\n\r\nclass FilteredList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: \"\"\r\n        };\r\n    }\r\n\r\n    onSearch = (event) => {\r\n        this.setState({ search: event.target.value.trim().toLowerCase() });\r\n    }\r\n\r\n    handleTypeSelect = (selectedType) => {\r\n        // Implement your logic based on the selectedType\r\n        console.log(`Selected Type: ${selectedType}`);\r\n        // You can update state or perform other actions as needed\r\n    }\r\n\r\n    filterItem = (item) => {\r\n        return item.name.toLowerCase().search(this.state.search) !== -1;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"filter-list\">\r\n                <h1>Produce Search</h1>\r\n                <DropdownButton id=\"typeDropdown\" title=\"Type\">\r\n                    <Dropdown.Item eventKey=\"all\" onSelect={() => this.handleTypeSelect(\"all\")}>All</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"fruit\" onSelect={() => this.handleTypeSelect(\"fruit\")}>Fruit</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"vegetable\" onSelect={() => this.handleTypeSelect(\"vegetable\")}>Vegetable</Dropdown.Item>\r\n                </DropdownButton>\r\n                <input type=\"text\" placeholder=\"Search\" onChange={this.onSearch} />\r\n                <List items={this.props.items.filter(this.filterItem)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilteredList;\r\n","// App.js\nimport React, { Component } from 'react';\nimport './App.css';\nimport HelloWorld from './HelloWorld';\nimport Counter from './Counter';\nimport FilteredList from './FilteredList';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <HelloWorld name={'Cole'} />\n        <Counter />\n        {/*\n  The list of produce will be passed into the FilteredList\n component the items property.\n  */}\n        <FilteredList items={produce} />\n      </div>\n    );\n  }\n}\n/*\n This list of produce that is passed into the FilteredList component.\n Notice that it is a list of javascript objects where {key: value}.\n*/ const produce =\n  [\n    { name: \"Apple\", type: \"Fruit\" },\n    { name: \"Pineapple\", type: \"Fruit\" },\n    { name: \"Banana\", type: \"Fruit\" },\n    { name: \"Pear\", type: \"Fruit\" },\n    { name: \"Strawberry\", type: \"Fruit\" },\n    { name: \"Orange\", type: \"Fruit\" },\n    { name: \"Lettuce\", type: \"Vegetable\" },\n    { name: \"Cucumber\", type: \"Vegetable\" },\n    { name: \"Eggplant\", type: \"Vegetable\" },\n    { name: \"Squash\", type: \"Vegetable\" },\n    { name: \"Bell pepper\", type: \"Vegetable\" },\n    { name: \"Onion\", type: \"Vegetable\" },\n  ];\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}